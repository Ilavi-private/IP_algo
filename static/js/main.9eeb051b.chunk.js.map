{"version":3,"sources":["components/main-page/main-page.module.css","components/list-page/list-page.module.css","components/ui/circle/circle.module.css","components/ui/solution-layout/solution-layout.module.css","components/sorting-page/sorting-page.module.css","components/queue-page/queue-page.module.css","components/stack-page/stack-page.module.css","components/ui/button/button.module.css","components/ui/input/input.module.css","components/ui/radio-input/radio-input.module.css","components/ui/column/column.module.css","components/ui/return-button/return-button.module.css","images/icons/loader.svg","components/app/app.module.css","components/ui/icons/return-icon.tsx","components/ui/return-button/return-button.tsx","components/ui/solution-layout/solution-layout.tsx","components/ui/input/input.tsx","components/ui/icons/ascending-icon.tsx","components/ui/icons/descending-icon.tsx","types/direction.ts","components/ui/button/button.tsx","types/element-states.ts","components/ui/circle/circle.tsx","components/ui/icons/arrow-icon.tsx","components/list-page/list-page.utils.ts","constants/delays.ts","utils/utils.ts","components/list-page/list-page.tsx","components/main-page/main-page.tsx","components/queue-page/queue-page.utils.ts","components/queue-page/queue-page.tsx","components/ui/radio-input/radio-input.tsx","components/ui/column/column.tsx","components/sorting-page/sorting-page.tsx","components/stack-page/stack-page.utils.ts","components/stack-page/stack-page.tsx","components/app/app.tsx","index.tsx"],"names":["module","exports","ReturnIcon","React","createElement","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","ReturnButton","_ref","extraClass","rest","Object","assign","className","concat","styles","button","type","SolutionLayout","title","contentText","children","content","titleBox","decoraionLine","decoraionLine_top","subtitle","contentCard","cardTitle","subtext","Link","link","to","returnButton","Input","placeholder","maxLength","max","isLimitText","limitText","input","limit","AscendingIcon","fillOpacity","DescendingIcon","Direction","Button","text","isLoader","sorting","linkedList","disabled","currentIcon","Ascending","loader","loader_icon","src","loaderIcon","alt","Fragment","ElementStates","Circle","state","Default","letter","head","index","tail","isSmall","absolute","circle","small","toString","tail80","tail40","ArrowIcon","LinkedListNode","constructor","value","next","this","undefined","LinkedList","elements","length","appendFromArray","append","element","newNode","prepend","currenNode","deleteHead","currentHead","deleteTail","current","newTail","get","counter","curr","_curr","addByIndex","prev","temp","deleteByIndex","deletedNode","toArray","res","push","getArrWithColor","map","item","color","values","forEach","setDelay","timeAwait","Promise","setTimeout","getRandomInt","minLen","maxLen","Math","floor","random","makeRandomArr","arr","i","round","ButtonName","ListPage","inputValue","setInputValue","useState","ind","setInd","loading","setLoading","addToHeadOperation","setAddToHeadOperation","addToTailOperation","setAddToTailOperation","deleteFromTheHeadOperation","setDeleteFromTheHeadOperation","deleteFromTheTailOperation","setDeleteFromTheTailOperation","addByIndexOperation","setAddByIndexOperation","deleteByIndexOperation","setDeleteByIndexOperation","inputValueInd","setInputValueInd","buttonName","setButtonName","circleTempValue","setCircleTempValue","list","useMemo","Array","from","setArr","showHead","showTail","stateAddButton","listLength","stateDeleteButton","stateButtonInsertAt","stateButtonDeleteAt","listPageStyles","mainContainer","controlContainer","section","onChange","e","target","data-testid","onClick","async","AddToHead","newArr","Modified","AddToTail","DeleteFromTheHead","DeleteFromTheTail","min","Number","AddByIndex","Changing","finalArr","DeleteByIndex","circlesBox","id","circleCont","key","smallCircleTop","smallCircleBottom","arrow","bigCircle","MainPage","Outlet","decoraionLine_middle","title_box","cards_box","card","stack","queue","decoraionLine_bottom","Queue","size","container","enqueue","Error","dequeue","isEmpty","peek","getHead","getTail","clear","getElements","getSize","emptyQueue","QueuePage","queueArr","setQueueArr","disableButtons","setDisableButtons","setLoader","buttonAdd","buttonDelete","buttonReset","setQueue","queuePageStyles","inputContainer","inputSection","addButton","deleteButton","handleRemoveButton","slice","RadioInput","label","nanoid","htmlFor","Column","column","style","SortingPage","array","setArray","sortName","setSortName","setSorting","handleClick","minInd","j","selectionSortAscending","then","r","Descending","maxInd","selectionSortDescending","bubbleSortAscending","bubbleSortDescending","changeOptionValue","event","direction","setDisabled","useEffect","sortingPageStyles","sortingOptionsContainer","radioButtonsCont","checked","sortingButtonsCont","onNewArrButtonClick","visualContainer","Stack","pop","StackPage","stackArr","setStackArr","givePosition","stackPageStyles","handleRemoveAllButton","App","Router","Routes","Route","path","Component","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.9eeb051b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"main-page_content__1P8t_\",\"title_box\":\"main-page_title_box__2KU9J\",\"title\":\"main-page_title__2Ndou\",\"cards_box\":\"main-page_cards_box__WDW5F\",\"card\":\"main-page_card__3Xn2v\",\"arr\":\"main-page_arr__2ETJX\",\"stack\":\"main-page_stack__2Snrr\",\"queue\":\"main-page_queue__3Ddeq\",\"list\":\"main-page_list__1EnAM\",\"subtext\":\"main-page_subtext__3xTm2\",\"decoraionLine\":\"main-page_decoraionLine__25_oE\",\"decoraionLine_top\":\"main-page_decoraionLine_top__3vpw1\",\"decoraionLine_middle\":\"main-page_decoraionLine_middle__2scJs\",\"decoraionLine_bottom\":\"main-page_decoraionLine_bottom__15FFW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"list-page_section__1s_pK\",\"input\":\"list-page_input__10Yyx\",\"mainContainer\":\"list-page_mainContainer__2__9j\",\"button\":\"list-page_button__1JOmc\",\"circlesBox\":\"list-page_circlesBox__ef4m2\",\"circleCont\":\"list-page_circleCont__3cJLy\",\"arrow\":\"list-page_arrow__3Rcqm\",\"smallCircleTop\":\"list-page_smallCircleTop__1HJ3F\",\"smallCircleBottom\":\"list-page_smallCircleBottom__g-gFX\",\"bigCircle\":\"list-page_bigCircle__3O_hI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"circle_content__1O_tW\",\"circle\":\"circle_circle__3oS3D\",\"small\":\"circle_small__1VvG9\",\"letter\":\"circle_letter__UG8qc\",\"default\":\"circle_default__25HXq\",\"absolute\":\"circle_absolute__20zQU\",\"head\":\"circle_head__amWu-\",\"element\":\"circle_element__2tgK1\",\"string\":\"circle_string__196Im\",\"index\":\"circle_index__8XeYt\",\"tail40\":\"circle_tail40__1cTHr\",\"tail80\":\"circle_tail80__68SJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"solution-layout_content__30gyA\",\"titleBox\":\"solution-layout_titleBox__nLFOb\",\"contentCard\":\"solution-layout_contentCard__1Z-lv\",\"returnButton\":\"solution-layout_returnButton__20jO9\",\"cardTitle\":\"solution-layout_cardTitle__2eDfA\",\"subtext\":\"solution-layout_subtext___N5go\",\"link\":\"solution-layout_link__3Hya6\",\"gradient\":\"solution-layout_gradient__2SVJU\",\"titledContainer\":\"solution-layout_titledContainer__3hdlD\",\"decoraionLine\":\"solution-layout_decoraionLine__7QwxN\",\"decoraionLine_top\":\"solution-layout_decoraionLine_top__3rowd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"sorting-page_mainContainer__LE0Ym\",\"sortingOptionsContainer\":\"sorting-page_sortingOptionsContainer___9DDq\",\"button\":\"sorting-page_button__32Xvo\",\"radioButtonsCont\":\"sorting-page_radioButtonsCont__2ZgHc\",\"sortingButtonsCont\":\"sorting-page_sortingButtonsCont__3GK4K\",\"visualContainer\":\"sorting-page_visualContainer__3pw_W\",\"column\":\"sorting-page_column__aVYI9\",\"section\":\"sorting-page_section__32CF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"queue-page_mainContainer__2VvaK\",\"inputContainer\":\"queue-page_inputContainer__2gBN2\",\"input\":\"queue-page_input__1mefN\",\"button\":\"queue-page_button__3PeCI\",\"inputSection\":\"queue-page_inputSection__3CNhm\",\"addButton\":\"queue-page_addButton__2mDAZ\",\"deleteButton\":\"queue-page_deleteButton__3JiaK\",\"circlesBox\":\"queue-page_circlesBox__3CKfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"stack-page_mainContainer__lDFMn\",\"inputContainer\":\"stack-page_inputContainer__1JTSt\",\"input\":\"stack-page_input__3at3d\",\"button\":\"stack-page_button__3uOuz\",\"inputSection\":\"stack-page_inputSection__nhl4b\",\"addButton\":\"stack-page_addButton__1JxsM\",\"deleteButton\":\"stack-page_deleteButton__3SsM-\",\"circlesBox\":\"stack-page_circlesBox__vMKUd\",\"decoraionLine_top\":\"stack-page_decoraionLine_top__3Rvs3\",\"decoraionLine_middle\":\"stack-page_decoraionLine_middle__11uoS\",\"decoraionLine_bottom\":\"stack-page_decoraionLine_bottom__3G6o2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__1yjAB\",\"gradient\":\"button_gradient__3mDgy\",\"big\":\"button_big__3a023\",\"loader\":\"button_loader__3CD2w\",\"loader_icon\":\"button_loader_icon__2O5l7\",\"rotation\":\"button_rotation__fcwfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"input_content__WLGyL\",\"input\":\"input_input__1P--v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"radio-input_input__2tOTX\",\"label\":\"radio-input_label__3oGLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"column_content__2N6JD\",\"column\":\"column_column__1onrt\",\"default\":\"column_default__139qn\",\"modified\":\"column_modified__2Ehhe\",\"changing\":\"column_changing__U-09y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"return-button_button__1FiSp\"};","module.exports = __webpack_public_path__ + \"static/media/loader.0b04fece.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__M9MMq\"};","import React from \"react\";\n\nexport const ReturnIcon = () => {\n    return (\n        <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M12.7073 4.29289C13.0978 4.68342 13.0978 5.31658 12.7073 5.70711L7.41436 11H19.0002C19.5524 11 20.0002 11.4477 20.0002 12C20.0002 12.5523 19.5524 13 19.0002 13H7.41436L12.7073 18.2929C13.0978 18.6834 13.0978 19.3166 12.7073 19.7071C12.3167 20.0976 11.6836 20.0976 11.293 19.7071L3.58594 12L11.293 4.29289C11.6836 3.90237 12.3167 3.90237 12.7073 4.29289Z\"\n                fill=\"FFF7E9\"\n            />\n        </svg>\n    );\n};\n","import React from \"react\";\nimport styles from \"./return-button.module.css\";\nimport {ReturnIcon} from \"../icons/return-icon\";\n\ninterface ButtonProps extends React.HTMLProps<HTMLButtonElement> {\n    type?: \"button\" | \"submit\" | \"reset\";\n    extraClass?: string;\n}\n\nexport const ReturnButton: React.FC<ButtonProps> = ({\n                                                        extraClass = \"\",\n                                                        ...rest\n                                                    }) => {\n    return (\n        <button\n            className={`${styles.button} ${extraClass}`}\n            type=\"button\"\n            {...rest}\n        >\n            <ReturnIcon/>\n            <p className=\"text text_type_button text_color_secondary ml-4\">К оглавлению</p>\n        </button>\n    );\n};\n","import React from \"react\";\nimport {ReturnButton} from \"../return-button/return-button\";\nimport {Button} from \"../button/button\";\nimport {Link} from \"react-router-dom\";\nimport styles from \"./solution-layout.module.css\";\n\ninterface SolutionLayoutProps {\n    title: string;\n    contentText: string;\n    extraClass?: string;\n    children?: any;\n}\n\nexport const SolutionLayout: React.FC<SolutionLayoutProps> = ({\n                                                                  extraClass = \"\",\n                                                                  title,\n                                                                  contentText,\n                                                                  children,\n                                                              }) => {\n    return (\n        <main className={`${styles.content} ${extraClass}`}>\n            <div className={styles.titleBox}>\n                <h1 className={`text text_type_h1 text_color_h1 ${styles.title}`}>\n                    Алгоритмы\n                </h1>\n                <div className={`${styles.decoraionLine} ${styles.decoraionLine_top}`}></div>\n                <span\n                    className={`text text_type_h2 text_color_secondary ${styles.subtitle}`}\n                >\n                </span>\n            </div>\n            <div className={styles.contentCard}>\n                <h3 className={`text text_type_h2 text_color_h2 ${styles.cardTitle}`}>\n                    {title}\n                </h3>\n                <p\n                    className={`text text_type_button text_color_secondary mt-14 ${styles.subtext}`}\n                > {contentText}\n                </p>\n                <Link className={`${styles.link}`} to=\"/VisuAlGo/\">\n                    <ReturnButton extraClass={styles.returnButton}/>\n                </Link>\n                {children}\n            </div>\n\n            <p\n                className={`text text_type_subtext text_color_secondary mt-14 ${styles.subtext}`}\n            >\n                Сделано Юровских Илави и Хрипуновым Даниилом.\n            </p>\n        </main>\n    );\n};\n","import React from \"react\";\nimport styles from \"./input.module.css\";\n\ninterface InputProps extends React.HTMLProps<HTMLInputElement> {\n    placeholder?: string;\n    extraClass?: string;\n    isLimitText?: boolean;\n}\n\nexport const Input: React.FC<InputProps> = ({\n                                                placeholder = \"Введите текст\",\n                                                extraClass = \"\",\n                                                type = \"text\",\n                                                maxLength,\n                                                max,\n                                                isLimitText = false,\n                                                ...rest\n                                            }) => {\n    const limitText =\n        type === \"text\"\n            ? `Максимум — ${maxLength} символа`\n            : `Максимальное число — ${max}`;\n\n    return (\n        <div className={`${styles.content} ${extraClass}`}>\n            <input\n                className={`${styles.input} text text_type_input text_color_input`}\n                placeholder={placeholder}\n                type={type}\n                maxLength={maxLength}\n                max={max}\n                {...rest}\n            />\n            {isLimitText && (\n                <span\n                    className={`text text_type_input-lim text_color_lim mt-2 ml-8 ${styles.limit}`}\n                >\n          {limitText}\n        </span>\n            )}\n        </div>\n    );\n};\n","import React from \"react\";\n\nexport const AscendingIcon = () => {\n    return (\n        <svg\n            width=\"20\"\n            height=\"12\"\n            viewBox=\"0 0 20 12\"\n            fill=\"inherit\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                d=\"M1 0C0.447715 0 0 0.447715 0 1C0 1.55228 0.447715 2 1 2H11C11.5523 2 12 1.55228 12 1C12 0.447715 11.5523 0 11 0H1ZM0 6C0 5.44772 0.447715 5 1 5H15C15.5523 5 16 5.44772 16 6C16 6.55228 15.5523 7 15 7H1C0.447715 7 0 6.55228 0 6ZM0 11C0 10.4477 0.447715 10 1 10H19C19.5523 10 20 10.4477 20 11C20 11.5523 19.5523 12 19 12H1C0.447716 12 0 11.5523 0 11Z\"\n                fill=\"inherit\"\n                fillOpacity=\"0.85\"\n            />\n        </svg>\n    );\n};\n","import React from \"react\";\n\nexport const DescendingIcon = () => {\n    return (\n        <svg\n            width=\"20\"\n            height=\"12\"\n            viewBox=\"0 0 20 12\"\n            fill=\"inherit\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0 1C0 0.44772 0.44772 0 1 0H19C19.5523 0 20 0.44772 20 1C20 1.55228 19.5523 2 19 2H1C0.44772 2 0 1.55228 0 1ZM0 6C0 5.4477 0.44772 5 1 5H15C15.5523 5 16 5.4477 16 6C16 6.5523 15.5523 7 15 7H1C0.44772 7 0 6.5523 0 6ZM1 10C0.44772 10 0 10.4477 0 11C0 11.5523 0.44772 12 1 12H11C11.5523 12 12 11.5523 12 11C12 10.4477 11.5523 10 11 10H1Z\"\n                fill=\"inherit\"\n                fillOpacity=\"0.85\"\n            />\n        </svg>\n    );\n};\n","export enum Direction {\n  Ascending = \"ascending\",\n  Descending = \"descending\",\n}\n","import React from \"react\";\nimport styles from \"./button.module.css\";\nimport loaderIcon from \"../../../images/icons/loader.svg\";\nimport {AscendingIcon} from \"../icons/ascending-icon\";\nimport {DescendingIcon} from \"../icons/descending-icon\";\nimport {Direction} from \"../../../types/direction\";\n\ninterface ButtonProps extends React.HTMLProps<HTMLButtonElement> {\n    text?: string;\n    type?: \"button\" | \"submit\" | \"reset\";\n    sorting?: Direction;\n    linkedList?: \"small\" | \"big\";\n    isLoader?: boolean;\n    extraClass?: string;\n}\n\nexport const Button: React.FC<ButtonProps> = ({\n                                                  text,\n                                                  extraClass = \"\",\n                                                  type = \"button\",\n                                                  isLoader = false,\n                                                  sorting,\n                                                  linkedList,\n                                                  disabled,\n                                                  ...rest\n                                              }) => {\n    const currentIcon =\n        sorting === Direction.Ascending ? <AscendingIcon/> : <DescendingIcon/>;\n    const className = `text text_type_button text_color_secondary ${\n        styles.button\n    } ${linkedList && styles[linkedList]} ${disabled} ${\n        isLoader && styles.loader\n    } ${extraClass}`;\n\n    return (\n        <button\n            className={className}\n            type={type}\n            disabled={isLoader || disabled}\n            {...rest}\n        >\n            {isLoader ? (\n                <img className={styles.loader_icon} src={loaderIcon} alt=\"Загрузка.\"/>\n            ) : (\n                <>\n                    {sorting && currentIcon}\n                    <p className={`text ${sorting && \"ml-5\"}`}>{text}</p>\n                </>\n            )}\n        </button>\n    );\n};\n","export enum ElementStates {\n  Default = \"default\",\n  Changing = \"changing\",\n  Modified = \"modified\",\n}\n","import React from \"react\";\nimport styles from \"./circle.module.css\";\nimport {ElementStates} from \"../../../types/element-states\";\n\ninterface CircleProps {\n    state?: ElementStates;\n    letter?: string;\n    head?: string | React.ReactElement | null;\n    index?: number;\n    tail?: string | React.ReactElement | null;\n    tailType?: \"string\" | \"element\";\n    extraClass?: string;\n    isSmall?: boolean;\n}\n\nexport const Circle: React.FC<CircleProps> = ({\n                                                  state = ElementStates.Default,\n                                                  letter,\n                                                  head,\n                                                  index,\n                                                  tail,\n                                                  extraClass = \"\",\n                                                  isSmall,\n                                              }) => {\n    return (\n        <div className={`${styles.content} ${extraClass}`}>\n            <div\n                className={`text text_type_input text_color_lim mb-4 ${\n                    styles.absolute\n                } ${styles.head} ${\n                    styles[typeof head === \"string\" ? \"string\" : \"element\"]\n                }`}\n            >\n                {head}\n            </div>\n            <div\n                className={`${styles.circle}  ${isSmall ? styles.small : \"\"} ${\n                    styles[state]\n                }`}\n            >\n                <p\n                    className={`text text_type_circle text_color_lim ${styles.letter}`}\n                >\n                    {letter}\n                </p>\n            </div>\n            <p\n                className={`text text_type_input text_color_lim mt-4 ${styles.absolute} ${styles.index}`}\n            >\n                {index?.toString()}\n            </p>\n            <div\n                className={`text text_type_input text_color_lim mt-4 ${\n                    styles.absolute\n                } ${index?.toString() ? styles.tail80 : styles.tail40} ${\n                    styles[typeof tail === \"string\" ? \"string\" : \"element\"]\n                }`}\n            >\n                {tail}\n            </div>\n        </div>\n    );\n};\n","import React from \"react\";\n\ninterface Props {\n    fill?: string;\n}\n\nexport const ArrowIcon: React.FC<Props> = ({fill = \"#e0b351\"}) => {\n    return (\n        <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M9.29289 4.29289C9.68342 3.90237 10.3166 3.90237 10.7071 4.29289L18.4142 12L10.7071 19.7071C10.3166 20.0976 9.68342 20.0976 9.29289 19.7071C8.90237 19.3166 8.90237 18.6834 9.29289 18.2929L15.5858 12L9.29289 5.70711C8.90237 5.31658 8.90237 4.68342 9.29289 4.29289Z\"\n                fill={fill}\n            />\n        </svg>\n    );\n};\n","import {ElementStates} from \"../../types/element-states\";\n\nexport class LinkedListNode<T> {\n    value: T\n    next: LinkedListNode<T> | null\n\n    constructor(value: T, next?: LinkedListNode<T> | null) {\n        this.value = value;\n        this.next = (next === undefined ? null : next);\n    };\n}\n\ninterface ILinkedList<T> {\n    append: (element: T) => void;\n    toArray: () => T[];\n    prepend: (element: T) => void;\n    deleteHead: () => void;\n    deleteTail: () => void;\n    addByIndex: (element: T, index: number) => void;\n    get: (index: number) => void;\n    deleteByIndex: (index: number) => void;\n    getArrWithColor: () => Array<{ value: T, color: ElementStates }>;\n}\n\nexport class LinkedList<T> implements ILinkedList<T> {\n    private head: LinkedListNode<T> | null;\n    private tail: LinkedListNode<T> | null;\n    private length: number;\n\n    constructor(elements: T[]) {\n        this.head = null;\n        this.tail = null;\n        this.length = 0;\n\n        if (elements?.length) {\n            this.appendFromArray(elements);\n        }\n    };\n\n    get listLength() {\n        return this.length;\n    };\n\n    append(element: T) {\n        const newNode = new LinkedListNode(element)\n        if (!this.head || !this.tail) {\n            this.head = newNode;\n            this.tail = newNode;\n            this.length++\n            return this;\n        }\n        this.tail.next = newNode;\n        this.tail = newNode\n        this.length++\n    };\n\n    prepend(element: T) {\n        const newNode = new LinkedListNode(element)\n\n        if (!this.head || !this.tail) {\n            this.head = newNode;\n            this.tail = newNode;\n            this.length++\n            return this;\n        }\n\n        const currenNode = this.head;\n        this.head = newNode;\n        this.head.next = currenNode;\n        this.length++\n    };\n\n    deleteHead() {\n        if (!this.head) return null;\n\n        if (this.length === 1) {\n            this.head = null;\n            this.tail = null;\n            this.length = 0;\n            return;\n        }\n\n        const currentHead = this.head;\n        this.head = currentHead.next;\n        this.length--;\n    };\n\n    deleteTail() {\n        if (!this.tail) return;\n\n        if (this.length === 1) {\n            this.head = null;\n            this.tail = null;\n            this.length = 0;\n            return;\n        }\n\n        let current = this.head;\n        let newTail = null;\n        while (current) {\n            if (current.next) {\n                newTail = current;\n            }\n            current = current.next;\n        }\n        this.tail = newTail;\n        this.tail!.next = null;\n        this.length--;\n    };\n\n    get(index: number) {\n        if (index < 0 || index >= this.length) return null;\n        let counter = 0;\n        let curr = this.head;\n        while (counter !== index && curr) {\n            curr = curr?.next;\n            counter++\n        }\n        return curr;\n    }\n\n    addByIndex(element: T, index: number) {\n        const newNode = new LinkedListNode(element)\n\n        if (index === 0) {\n            newNode.next = this.head;\n            this.head = newNode;\n            this.length++\n        }\n\n        let prev = this.get(index - 1);\n        if (prev?.next) {\n            let temp = prev?.next;\n            prev!.next = newNode;\n            newNode!.next = temp;\n            this.length++\n        }\n        return\n    };\n\n    deleteByIndex(index: number) {\n        if (index === 0) return this.deleteHead();\n        if (index === this.length - 1) return this.deleteTail();\n        let prev = this.get(index - 1);\n        if (prev?.next) {\n            let deletedNode = prev?.next;\n            prev.next = deletedNode?.next;\n            this.length--\n            return deletedNode;\n        }\n    };\n\n    toArray() {\n        let curr = this.head;\n        const res = [];\n\n        while (curr) {\n            res.push(curr.value);\n            curr = curr.next;\n        }\n        return [...res];\n    };\n\n    getArrWithColor() {\n        return this.toArray().map(item => ({value: item, color: ElementStates.Default}));\n    };\n\n    private appendFromArray(values: T[]) {\n        values.forEach((value) => this.append(value));\n    };\n}\n","export const DELAY_IN_MS = 1000;\nexport const SHORT_DELAY_IN_MS = 500;\n\n","\nimport { ElementStates } from \"../types/element-states\";\n\nexport const setDelay = (timeAwait: number) => {\n    return new Promise(res => setTimeout(res, timeAwait));\n};\n\nexport const getRandomInt = (minLen: number, maxLen: number) => {\n    return Math.floor(Math.random() * (maxLen - minLen + 1)) + minLen;\n};\n\nexport const makeRandomArr = () => {\n    const arr = [];\n    const length = getRandomInt(3, 17);\n    for (let i = 0; i < length; i++) {\n        arr.push({ value: Math.round(Math.random() * 100), color: ElementStates.Default });\n    }\n    return arr;\n};","import React, {ChangeEvent, useMemo, useState} from \"react\";\nimport {SolutionLayout} from \"../ui/solution-layout/solution-layout\";\nimport {Input} from \"../ui/input/input\";\nimport {Button} from \"../ui/button/button\";\nimport listPageStyles from './list-page.module.css'\nimport {Circle} from \"../ui/circle/circle\";\nimport {ArrowIcon} from \"../ui/icons/arrow-icon\";\nimport {LinkedList} from \"./list-page.utils\";\nimport {SHORT_DELAY_IN_MS} from \"../../constants/delays\";\nimport {ElementStates} from \"../../types/element-states\";\nimport {getRandomInt, setDelay} from \"../../utils/utils\";\n\ntype TItem = {\n    value: string;\n    color: ElementStates;\n};\n\nenum ButtonName {\n    AddToHead = \"add to head\",\n    AddToTail = \"add to tail\",\n    DeleteFromTheHead = \"delete from the head\",\n    DeleteFromTheTail = \"delete from to tail\",\n    AddByIndex = \"add by index\",\n    DeleteByIndex = \"delete by index\",\n}\n\nexport const ListPage: React.FC = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [ind, setInd] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [addToHeadOperation, setAddToHeadOperation] = useState(false);\n    const [addToTailOperation, setAddToTailOperation] = useState(false);\n    const [deleteFromTheHeadOperation, setDeleteFromTheHeadOperation] = useState(false);\n    const [deleteFromTheTailOperation, setDeleteFromTheTailOperation] = useState(false);\n    const [addByIndexOperation, setAddByIndexOperation] = useState(false);\n    const [deleteByIndexOperation, setDeleteByIndexOperation] = useState(false);\n    const [inputValueInd, setInputValueInd] = useState<number>();\n    const [buttonName, setButtonName] = useState('');\n    const [circleTempValue, setCircleTempValue] = useState('');\n\n    const list = useMemo(() => new LinkedList<string>(Array.from({length: 4}, () => (getRandomInt(0, 99).toString()))), []);\n\n    const [arr, setArr] = useState<TItem[]>(list.getArrWithColor());\n\n    const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n    };\n\n    const onIndChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setInd(e.target.value);\n    };\n\n    const addIntoHead = async () => {\n        if (inputValue && list.listLength < 6) {\n            setButtonName(ButtonName.AddToHead);\n            setLoading(true);\n            setInputValueInd(0);\n            setAddToHeadOperation(true);\n            await setDelay(SHORT_DELAY_IN_MS);\n            list.prepend(inputValue);\n            setAddToHeadOperation(false);\n            const newArr = list.getArrWithColor();\n            newArr[0].color = ElementStates.Modified;\n            setArr(newArr);\n            await setDelay(SHORT_DELAY_IN_MS);\n            newArr[0].color = ElementStates.Default;\n            setArr(newArr);\n        }\n        setInputValue('');\n        setLoading(false);\n        setButtonName('');\n    }\n\n    const addIntoTail = async () => {\n        if (inputValue && list.listLength < 6) {\n            setButtonName(ButtonName.AddToTail)\n            setLoading(true);\n            setInputValueInd(list.listLength - 1);\n            setAddToTailOperation(true);\n            await setDelay(SHORT_DELAY_IN_MS);\n            list.append(inputValue);\n            setAddToTailOperation(false);\n            const newArr = list.getArrWithColor();\n            newArr[newArr.length - 1].color = ElementStates.Modified;\n            setArr(newArr);\n            await setDelay(SHORT_DELAY_IN_MS);\n            newArr[newArr.length - 1].color = ElementStates.Default;\n            setArr(newArr);\n        }\n        setInputValue('');\n        setLoading(false);\n        setButtonName('');\n    };\n\n    const deleteFromTheHead = async () => {\n        if (list.listLength > 0) {\n            const newArr = list.getArrWithColor();\n            setCircleTempValue(newArr[0].value);\n            setButtonName(ButtonName.DeleteFromTheHead);\n            setLoading(true);\n            setDeleteFromTheHeadOperation(true);\n            setInputValueInd(0);\n            newArr[0].value = '';\n            setArr(newArr);\n            await setDelay(SHORT_DELAY_IN_MS);\n            list.deleteHead();\n            setDeleteFromTheHeadOperation(false);\n            setArr(list.getArrWithColor());\n        }\n        setLoading(false);\n        setButtonName('');\n    };\n\n    const deleteFromTheTail = async () => {\n        if (list.listLength > 0) {\n            const newArr = list.getArrWithColor();\n            setCircleTempValue(newArr[newArr.length - 1].value);\n            setButtonName(ButtonName.DeleteFromTheTail);\n            setLoading(true);\n            setDeleteFromTheTailOperation(true);\n            setInputValueInd(list.listLength - 1);\n            newArr[newArr.length - 1].value = '';\n            setArr(newArr);\n            await setDelay(SHORT_DELAY_IN_MS);\n            list.deleteTail();\n            setDeleteFromTheTailOperation(false);\n            setArr(list.getArrWithColor());\n        }\n        setLoading(false);\n        setButtonName('');\n    };\n\n    const addByIndex = async () => {\n        if (Number(ind) < 5 && list.listLength < 6) {\n            setButtonName(ButtonName.AddByIndex);\n            setLoading(true);\n            setAddByIndexOperation(true);\n            const newArr = list.getArrWithColor();\n            for (let i = 0; i <= Number(ind); i++) {\n                setInputValueInd(i);\n                await setDelay(SHORT_DELAY_IN_MS);\n                if (i < Number(ind)) {\n                    newArr[i].color = ElementStates.Changing;\n                    setArr(newArr);\n                }\n            }\n\n            setAddByIndexOperation(false);\n            setInputValueInd(Number(''));\n            list.addByIndex(inputValue, Number(ind));\n            const finalArr = list.getArrWithColor();\n            finalArr[Number(ind)].color = ElementStates.Modified;\n\n            setArr(finalArr);\n            await setDelay(SHORT_DELAY_IN_MS);\n            finalArr[Number(ind)].color = ElementStates.Default;\n            setArr(finalArr);\n        }\n\n        setLoading(false);\n        setInputValue('');\n        setInd('');\n        setButtonName('');\n    };\n\n    const deleteByIndex = async () => {\n        if (Number(ind) < list.listLength && Number(ind) < 7) {\n            setButtonName(ButtonName.DeleteByIndex);\n            setLoading(true);\n            const newArr = list.getArrWithColor();\n            for (let i = 0; i <= Number(ind); i++) {\n                await setDelay(SHORT_DELAY_IN_MS);\n                newArr[i].color = ElementStates.Changing;\n                setArr([...newArr]);\n            }\n\n            await setDelay(SHORT_DELAY_IN_MS);\n            setCircleTempValue(newArr[Number(ind)].value);\n            newArr[Number(ind)].value = '';\n            setDeleteByIndexOperation(true);\n            newArr[Number(ind)].color = ElementStates.Default;\n            setInputValueInd(Number(ind));\n            await setDelay(SHORT_DELAY_IN_MS);\n            list.deleteByIndex(Number(ind));\n            setArr(list.getArrWithColor());\n            setDeleteByIndexOperation(false);\n            setLoading(false);\n            setButtonName('');\n            setInd('');\n        }\n    };\n\n    const showHead = (index: number) => {\n        if (index === 0 && !addToHeadOperation && !addByIndexOperation) {\n            return 'head';\n        } else if (index === 0 && addByIndexOperation && inputValueInd !== 0) {\n            return 'head';\n        } else {\n            return '';\n        }\n    };\n\n    const showTail = (index: number) => {\n        if (index === arr.length - 1 && !deleteFromTheTailOperation && !deleteByIndexOperation) {\n            return 'tail';\n        } else if (arr.length === 1) {\n            return '';\n        } else if (deleteByIndexOperation && index === arr.length - 1) {\n            return '';\n        } else {\n            return '';\n        }\n    };\n\n    const stateAddButton = !inputValue || loading || list.listLength >= 6;\n    const stateDeleteButton = !list.listLength || loading;\n    const stateButtonInsertAt = !inputValue || !ind || loading || +ind < 0 || +ind > list.listLength - 1 || list.listLength >= 6;\n    const stateButtonDeleteAt = !list.listLength || !ind || loading || +ind < 0 || +ind > list.listLength - 1;\n\n    return (\n        <SolutionLayout contentText={\"структура данных, в которой элементы линейно упорядочены, но порядок определяется не номерами элементов\\n\" +\n            \"                (как в массивах), а указателями, входящих в состав элементов списка и указывают на следующий элемент. У\\n\" +\n            \"                списка должна быть «голова» (первый элемент) и «хвост» (последний элемент).\"} title=\"Связный список\">\n\n            <div className={listPageStyles.mainContainer}>\n                <div className={listPageStyles.controlContainer}>\n                    <section className={listPageStyles.section}>\n                        <Input\n                            placeholder=\"Введите значение\"\n                            maxLength={4}\n                            isLimitText={true}\n                            value={inputValue}\n                            onChange={onInputChange}\n                            disabled={loading}\n                            data-testid='inputValue'/>\n                        <div className={listPageStyles.button}>\n                            <Button\n                                text=\"Добавить в head\"\n                                onClick={addIntoHead}\n                                isLoader={buttonName === ButtonName.AddToHead && loading}\n                                disabled={stateAddButton}\n                                data-testid='addIntoHead'/>\n                        </div>\n                        <div className={listPageStyles.button}>\n                            <Button\n                                text=\"Добавить в tail\"\n                                onClick={addIntoTail}\n                                isLoader={buttonName === ButtonName.AddToTail && loading}\n                                disabled={stateAddButton}\n                                data-testid='addIntoTail'/>\n                        </div>\n                        <div className={listPageStyles.button}>\n                            <Button\n                                text=\"Удалить из head\"\n                                onClick={deleteFromTheHead}\n                                isLoader={buttonName === ButtonName.DeleteFromTheHead && loading}\n                                disabled={stateDeleteButton}\n                                data-testid='deleteFromTheHead'/>\n                        </div>\n                        <div className={listPageStyles.button}>\n                            <Button\n                                text=\"Удалить из tail\"\n                                onClick={deleteFromTheTail}\n                                isLoader={buttonName === ButtonName.DeleteFromTheTail && loading}\n                                disabled={stateDeleteButton}\n                                data-testid='deleteFromTheTail'/>\n                        </div>\n                    </section>\n                    <section className={listPageStyles.section}>\n                        <div className={listPageStyles.input}>\n                            <Input\n                                placeholder=\"Введите индекс\"\n                                max={5}\n                                min='0'\n                                type=\"number\"\n                                value={ind}\n                                onChange={onIndChange}\n                                disabled={loading}\n                                data-testid='indexValue'\n                            />\n                        </div>\n                        <Button\n                            text=\"Добавить по индексу\"\n                            onClick={addByIndex}\n                            isLoader={buttonName === ButtonName.AddByIndex && loading}\n                            disabled={stateButtonInsertAt}\n                            data-testid='addByIndex'\n                        />\n                        <Button\n                            text=\"Удалить по индексу\"\n                            onClick={deleteByIndex}\n                            isLoader={buttonName === ButtonName.DeleteByIndex && loading}\n                            disabled={stateButtonDeleteAt}\n                            data-testid='deleteByIndex'\n                        />\n                    </section>\n                </div>\n                <ul className={listPageStyles.circlesBox} id='linkedList'>\n                    {arr.map((item, index) =>\n                        <li className={listPageStyles.circleCont} key={index}>\n                            {loading && (addToHeadOperation || addToTailOperation || addByIndexOperation) && index === inputValueInd &&\n                                <div className={listPageStyles.smallCircleTop} data-testid='topCircle'>\n                                    <Circle isSmall letter={inputValue} state={ElementStates.Changing}/>\n                                </div>}\n                            {loading && (deleteFromTheHeadOperation || deleteFromTheTailOperation || deleteByIndexOperation) && index === inputValueInd &&\n                                <div className={listPageStyles.smallCircleBottom} data-testid='bottomCircle'>\n                                    <Circle isSmall letter={circleTempValue} state={ElementStates.Changing}/>\n                                </div>}\n                            {arr.length - 1 !== index &&\n                                <div className={listPageStyles.arrow}>\n                                    <ArrowIcon/>\n                                </div>}\n                            <div className={listPageStyles.bigCircle}>\n                                <Circle\n                                    index={index}\n                                    head={showHead(index)}\n                                    tail={showTail(index)}\n                                    letter={item.value}\n                                    state={item.color}\n                                />\n                            </div>\n                        </li>)}\n                </ul>\n            </div>\n        </SolutionLayout>\n    );\n};\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport { Outlet } from 'react-router-dom';\nimport styles from \"./main-page.module.css\";\n\ninterface MainPageProps {\n    extraClass?: string;\n}\n\nexport const MainPage: React.FC<MainPageProps> = ({extraClass = \"\"}) => {\n    return (\n        <>\n            <Outlet></Outlet>\n            <main className={`${styles.content} ${extraClass}`}>\n                <div className={`${styles.decoraionLine} ${styles.decoraionLine_top}`}></div>\n                <div className={`${styles.decoraionLine} ${styles.decoraionLine_middle}`}></div>\n                <div className={styles.title_box}>\n                    <h1 className={`text text_type_h1 text_color_h1 ${styles.title}`}>\n                        Алгоритмы\n                    </h1>\n                    <p\n                        className={`text text_type_h2 text_color_secondary ${styles.title}`}\n                    >\n                        и структуры данных\n                    </p>\n                    <p\n                        className={`text text_type_subtext text_color_secondary mt-14 ${styles.subtext}`}\n                    >\n                        На нашем маленьком сайте представлены пара сортировок и разные анимации взаимрдействия с самыми\n                        известными структурами данных в програмировании\n                    </p>\n                </div>\n                <div className={styles.cards_box}>\n                    <Link className={styles.link} to=\"stack\">\n                        <div className={`${styles.card} ${styles.stack}`}/>\n                    </Link>\n                    <Link className={styles.link} to=\"sorting\">\n                        <div className={`${styles.card} ${styles.arr}`}/>\n                    </Link>\n                    <Link className={styles.link} to=\"queue\">\n                        <div className={`${styles.card} ${styles.queue}`}/>\n                    </Link>\n                    <Link className={styles.link} to=\"list\">\n                        <div className={`${styles.card} ${styles.list}`}/>\n                    </Link>\n                </div>\n                <div className={`${styles.decoraionLine} ${styles.decoraionLine_bottom}`}></div>\n                <p\n                    className={`text text_type_subtext text_color_secondary mt-14 ${styles.subtext}`}\n                >\n                    Сделано Юровских Илави и Хрипуновым Даниилом.\n                </p>\n            </main>\n        </>\n    );\n};\n","interface IQueue<T> {\n    enqueue: (item: T) => void;\n    dequeue: () => void;\n    peek: () => T | null;\n    getHead: () => number;\n    getTail: () => number;\n    clear: () => void;\n    isEmpty: () => boolean;\n    getSize: () => number;\n    getElements: () => Array<T | null>;\n}\n\nexport class Queue<T> implements IQueue<T> {\n    [x: string]: any;\n\n    private container: (T | null)[] = [];\n    private head = 0;\n    private tail = 0;\n    private readonly size: number = 0;\n    private length: number = 0;\n\n    constructor(size: number) {\n        this.size = size;\n        this.container = Array(size);\n    };\n\n    enqueue = (item: T) => {\n        if (this.length >= this.size) {\n            throw new Error(\"Maximum length exceeded\");\n        }\n\n        if (this.tail > 6) {\n            return this.container\n        }\n\n        if (this.length < this.size) {\n            this.container[this.tail % this.size] = item;\n            this.tail++\n            this.length++\n        }\n\n    };\n\n    dequeue = () => {\n        if (this.isEmpty()) {\n            throw new Error(\"No elements in the queue\");\n        }\n\n        if (this.length < this.size) {\n            this.container[this.head % this.size] = null;\n            this.head++\n            this.length--\n        }\n    };\n\n    peek = (): T | null => {\n        if (this.isEmpty()) {\n            throw new Error(\"No elements in the queue\");\n        }\n\n        return this.container[this.head % this.size]\n    };\n\n    getHead = () => {\n        return this.head;\n    };\n\n    getTail = () => {\n        return this.tail;\n    };\n\n    clear = () => {\n        this.head = 0;\n        this.tail = 0;\n        this.length = 0;\n        this.container = [];\n    };\n\n    isEmpty = () => this.length === 0;\n\n    getElements = () => {\n        return [...this.container]\n    };\n\n    getSize = () => this.container.length;\n}\n","import React, {ChangeEvent, useState} from \"react\";\nimport {Button} from \"../ui/button/button\";\nimport {Circle} from \"../ui/circle/circle\";\nimport {Input} from \"../ui/input/input\";\nimport {SolutionLayout} from \"../ui/solution-layout/solution-layout\";\nimport queuePageStyles from './queue-page.module.css'\nimport {Queue} from \"./queue-page.utils\";\nimport {ElementStates} from \"../../types/element-states\";\nimport {SHORT_DELAY_IN_MS} from \"../../constants/delays\";\nimport {setDelay} from \"../../utils/utils\";\nimport {ButtonState} from \"../../types/buttonState\";\n\ntype TQueueItem = {\n    value?: string;\n    color: ElementStates;\n    head?: string;\n};\n\nconst emptyQueue = Array.from({length: 7}, () => ({value: '', color: ElementStates.Default}));\n\nexport const QueuePage: React.FC = () => {\n    const [inputValue, setInputValue] = useState('');\n    const [queueArr, setQueueArr] = useState<TQueueItem[]>(emptyQueue);\n    const [disableButtons, setDisableButtons] = useState(false);\n\n    const [loader, setLoader] = useState<ButtonState>({\n        buttonAdd: false,\n        buttonDelete: false,\n        buttonReset: false\n    });\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n    };\n\n    const [queue, setQueue] = useState(new Queue<TQueueItem>(7));\n\n    const handeAddButton = async () => {\n        if (inputValue) {\n            setLoader({ ...loader, buttonAdd: true });\n            setInputValue('');\n            queue.enqueue({value: inputValue, color: ElementStates.Default});\n            setQueue(queue);\n            queueArr[queue.getTail() - 1] = {value: '', color: ElementStates.Changing};\n            setQueueArr([...queueArr]);\n            await setDelay(SHORT_DELAY_IN_MS);\n            queueArr[queue.getTail() - 1] = {value: inputValue, color: ElementStates.Changing};\n            setQueueArr([...queueArr]);\n            queueArr[queue.getTail() - 1] = {value: inputValue, color: ElementStates.Default};\n            setQueueArr([...queueArr]);\n            setLoader({ ...loader, buttonAdd: false });\n        }\n    };\n\n    const handeDeleteButton = async () => {\n        setLoader({ ...loader, buttonDelete: true });\n        setDisableButtons(true);\n        queue.dequeue();\n        setQueue(queue);\n        queueArr[queue.getHead() - 1] = {value: queueArr[queue.getHead() - 1].value, color: ElementStates.Changing};\n        setQueueArr([...queueArr]);\n        await setDelay(SHORT_DELAY_IN_MS);\n        queueArr[queue.getHead() - 1] = {value: '', color: ElementStates.Default};\n        setQueueArr([...queueArr]);\n        if (queue.getHead() === 7 && queue.getTail() === 7 && queue.isEmpty()) {\n            queueArr[queue.getHead() - 1] = {value: '', color: ElementStates.Default, head: 'head'};\n            setQueueArr([...queueArr]);\n        }\n        setDisableButtons(false);\n        setLoader({ ...loader, buttonDelete: false });\n    };\n\n    const handleRemoveButton = () => {\n        setLoader({ ...loader, buttonReset: true })\n        queue.clear()\n        setQueue(queue);\n        setQueueArr(Array.from({length: 7}, () => ({value: '', color: ElementStates.Default})));\n        setLoader({ ...loader, buttonReset: false })\n    };\n\n    return (\n        <SolutionLayout title=\"Очередь\" contentText={\"структура данных, которая работает по принципу «последним пришёл, первым ушёл» (FIFO — first in, first out). Очередь можно представить как контейнер, беспечивающий добавление элементов в конец очереди и извлечение элементов с начала очереди\"}>\n            <div className={queuePageStyles.mainContainer}>\n                <div className={queuePageStyles.inputContainer}>\n                    <section className={queuePageStyles.inputSection}>\n                        <div className={queuePageStyles.input}>\n                            <Input maxLength={4} isLimitText={true} type=\"text\" onChange={onChange} value={inputValue}/>\n                        </div>\n                        <div className={queuePageStyles.addButton}>\n                            <Button text=\"Добавить\" data-testid='addBtn' disabled={inputValue === '' || disableButtons}  isLoader={loader.buttonAdd}\n                                    onClick={handeAddButton}/>\n                        </div>\n                        <div className={queuePageStyles.deleteButton}>\n                            <Button text=\"Удалить\" data-testid='deleteBtn' disabled={queue.isEmpty() || disableButtons} isLoader={loader.buttonDelete}\n                                    onClick={handeDeleteButton}/>\n                        </div>\n                    </section>\n                    <div className={queuePageStyles.button}>\n                        <Button text=\"Очистить\" data-testid='removeBtn'\n                                disabled={(!queue.getHead() && !queue.getTail()) || disableButtons}  isLoader={loader.buttonReset}\n                                onClick={handleRemoveButton}/>\n                    </div>\n                </div>\n                <ul className={queuePageStyles.circlesBox}>\n                    {queueArr && queueArr.slice(0, 7).map((item, index) =>\n                        <li key={index}>\n                            <Circle\n                                letter={item.value}\n                                index={index}\n                                state={item.color}\n                                head={(index === queue.getHead() && !queue.isEmpty()) || item.head ? 'head' : ''}\n                                tail={(index === queue.getTail() - 1 && !queue.isEmpty()) ? 'tail' : ''}/>\n                        </li>)}\n                </ul>\n            </div>\n        </SolutionLayout>\n    );\n};\n","import React from \"react\";\nimport {nanoid} from \"nanoid\";\nimport styles from \"./radio-input.module.css\";\n\ninterface RadioProps extends React.HTMLProps<HTMLInputElement> {\n    label: string;\n    extraClass?: string;\n}\n\nexport const RadioInput: React.FC<RadioProps> = ({\n                                                     label = \"Введите текст\",\n                                                     extraClass = \"\",\n                                                     ...rest\n                                                 }) => {\n    const id = nanoid();\n\n    return (\n        <div className={`${styles.content} ${extraClass}`}>\n            <input className={styles.input} type=\"radio\" id={id} {...rest} />\n            <label className={`text text_type_button text_color_lim ${styles.label}`} htmlFor={id}>\n                {label}\n            </label>\n        </div>\n    );\n};\n","import React from \"react\";\nimport styles from \"./column.module.css\";\nimport {ElementStates} from \"../../../types/element-states\";\n\ninterface ColumnProps {\n    index: number;\n    state?: ElementStates;\n    extraClass?: string;\n}\n\nexport const Column: React.FC<ColumnProps> = ({\n                                                  index,\n                                                  state = ElementStates.Default,\n                                                  extraClass = \"\",\n                                              }) => (\n    <div className={`${styles.content} ${extraClass}`}>\n        <div\n            className={`${styles.column} ${styles[state]}`}\n            style={{height: (320 * index) / 100 || 1}}\n        />\n        <p className={`text text_type_column text_color_lim mt-3`}>{index}</p>\n    </div>\n);\n","import React, {Dispatch, SetStateAction, useEffect, useState} from \"react\";\nimport {SolutionLayout} from '../ui/solution-layout/solution-layout';\nimport sortingPageStyles from './sorting-page.module.css';\nimport {RadioInput} from \"../ui/radio-input/radio-input\";\nimport {Button} from \"../ui/button/button\";\nimport {Column} from \"../ui/column/column\";\nimport {ElementStates} from \"../../types/element-states\";\nimport {Direction} from \"../../types/direction\";\nimport {DELAY_IN_MS} from \"../../constants/delays\";\n\nimport {makeRandomArr, setDelay} from \"../../utils/utils\";\n\n\ntype TArray = {\n    value: number;\n    color: ElementStates;\n};\n\nexport const selectionSortAscending = async (arr: TArray[], setArray: Dispatch<SetStateAction<TArray[]>>, setLoader: Dispatch<SetStateAction<boolean>>) => {\n    setLoader(true);\n    if (arr.length > 1) {\n        for (let i = 0; i < arr.length - 1; i++) {\n            let minInd = i;\n            for (let j = i + 1; j < arr.length; j++) {\n                arr[i].color = ElementStates.Changing;\n                arr[j].color = ElementStates.Changing;\n                setArray([...arr]);\n                await setDelay(DELAY_IN_MS);\n                if (arr[j].value < arr[minInd].value) {\n                    minInd = j;\n                }\n                arr[j].color = ElementStates.Default;\n                setArray([...arr]);\n            }\n            [arr[i].value, arr[minInd].value] = [arr[minInd].value, arr[i].value];\n            arr[i].color = ElementStates.Modified;\n        }\n        arr[arr.length - 1].color = ElementStates.Modified;\n        setArray([...arr]);\n    }\n    setLoader(false);\n};\n\nexport const selectionSortDescending = async (arr: TArray[], setArray: Dispatch<SetStateAction<TArray[]>>, setLoader: Dispatch<SetStateAction<boolean>>) => {\n    setLoader(true);\n    if (arr.length > 1) {\n        for (let i = 0; i < arr.length - 1; i++) {\n            let maxInd = i;\n            for (let j = i + 1; j < arr.length; j++) {\n                arr[i].color = ElementStates.Changing;\n                arr[j].color = ElementStates.Changing;\n                setArray([...arr]);\n                await setDelay(DELAY_IN_MS);\n                if (arr[j].value > arr[maxInd].value) {\n                    maxInd = j;\n                }\n                arr[j].color = ElementStates.Default;\n                setArray([...arr]);\n            }\n            [arr[i].value, arr[maxInd].value] = [arr[maxInd].value, arr[i].value];\n            arr[i].color = ElementStates.Modified;\n        }\n        arr[arr.length - 1].color = ElementStates.Modified;\n        setArray([...arr]);\n    }\n    setLoader(false);\n};\n\nexport const bubbleSortAscending = async (arr: TArray[], setArray: Dispatch<SetStateAction<TArray[]>>, setLoader: Dispatch<SetStateAction<boolean>>) => {\n    setLoader(true);\n    if (arr.length > 1) {\n        for (let i = 0; i < arr.length; i++) {\n            for (let j = 0; j < arr.length - i - 1; j++) {\n                arr[j].color = ElementStates.Changing;\n                arr[j + 1].color = ElementStates.Changing;\n                setArray([...arr]);\n                await setDelay(DELAY_IN_MS);\n                if (arr[j].value > arr[j + 1].value) {\n                    [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n                }\n                arr[j].color = ElementStates.Default;\n            }\n            arr[arr.length - i - 1].color = ElementStates.Modified;\n            setArray([...arr]);\n        }\n    }\n    setLoader(false);\n};\n\nexport const bubbleSortDescending = async (arr: TArray[], setArray: Dispatch<SetStateAction<TArray[]>>, setLoader: Dispatch<SetStateAction<boolean>>) => {\n    setLoader(true);\n    if (arr.length > 1) {\n        for (let i = 0; i < arr.length; i++) {\n            for (let j = 0; j < arr.length - i - 1; j++) {\n                arr[j].color = ElementStates.Changing;\n                arr[j + 1].color = ElementStates.Changing;\n                setArray([...arr]);\n                await setDelay(DELAY_IN_MS);\n                if (arr[j].value < arr[j + 1].value) {\n                    [arr[j].value, arr[j + 1].value] = [arr[j + 1].value, arr[j].value];\n                }\n                arr[j].color = ElementStates.Default;\n            }\n            arr[arr.length - i - 1].color = ElementStates.Modified;\n            setArray([...arr]);\n        }\n    }\n    setLoader(false);\n};\n\nexport const SortingPage: React.FC = () => {\n    const [array, setArray] = useState<TArray[]>([]);\n    const [sortName, setSortName] = useState('выбор');\n    const [sorting, setSorting] = useState<Direction>();\n    const [loader, setLoader] = useState(false);\n\n    const onNewArrButtonClick = () => {\n        setArray([...makeRandomArr()]);\n    };\n\n    const handleClick = (sorting: Direction) => {\n        setSorting(sorting);\n\n        if (sortName === 'выбор' && sorting === Direction.Ascending) {\n            selectionSortAscending(array, setArray, setLoader).then(r => r);\n        }\n        if (sortName === 'выбор' && sorting === Direction.Descending) {\n            selectionSortDescending(array, setArray, setLoader).then(r => r);\n        }\n        if (sortName === 'пузырек' && sorting === Direction.Ascending) {\n            bubbleSortAscending(array, setArray, setLoader).then(r => r);\n        }\n        if (sortName === 'пузырек' && sorting === Direction.Descending) {\n            bubbleSortDescending(array, setArray, setLoader).then(r => r);\n        }\n    };\n\n    const changeOptionValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setSortName(event.target.value);\n    };\n\n    const setLoading = (direction: Direction) => {\n        return sorting === direction && loader;\n    };\n    const setDisabled = (direction: Direction) => {\n        return sorting !== direction && loader;\n    };\n\n    useEffect(() => {\n        setArray([...makeRandomArr()]);\n        return () => {\n            setArray([])\n        };\n    }, []);\n\n    return (\n        <SolutionLayout contentText={\"Теперь о двух сортировках. Алгоритм сортировки выбором заключается в поиске минимального значения и в дальнейшем обмене этого значения с первым элементом. Сортировка вставками — это алгоритм, на каждом шаге которого массив постепенно перебирается слева направо. При этом каждый последующий элемент размещается так, чтобы он оказался между ближайшими элементами с минимальным и максимальным значением.\"} title=\"Сортировка массива\">\n            <div className={sortingPageStyles.mainContainer}>\n                <div className={sortingPageStyles.sortingOptionsContainer}>\n                    <section className={sortingPageStyles.section}>\n                        <div className={sortingPageStyles.radioButtonsCont}>\n                            <RadioInput\n                                label=\"Выбор\"\n                                value='выбор'\n                                checked={sortName === 'выбор'}\n                                onChange={changeOptionValue}\n                                disabled={loader}/>\n                            <RadioInput\n                                label=\"Пузырёк\"\n                                value='пузырек'\n                                checked={sortName === 'пузырек'}\n                                onChange={changeOptionValue}\n                                disabled={loader}/>\n                        </div>\n                        <div className={sortingPageStyles.sortingButtonsCont}>\n                            <div className={sortingPageStyles.button}>\n                                <Button\n                                    text='По возрастанию'\n                                    sorting={Direction.Ascending}\n                                    onClick={() => handleClick(Direction.Ascending)}\n                                    isLoader={setLoading(Direction.Ascending)}\n                                    disabled={setDisabled(Direction.Ascending)}\n                                />\n                            </div>\n                            <div className={sortingPageStyles.button}>\n                                <Button\n                                    text='По убыванию'\n                                    sorting={Direction.Descending}\n                                    onClick={() => handleClick(Direction.Descending)}\n                                    isLoader={setLoading(Direction.Descending)}\n                                    disabled={setDisabled(Direction.Descending)}\n                                />\n                            </div>\n                        </div>\n                    </section>\n                    <div className={sortingPageStyles.button}>\n                        <Button text='Новый массив' disabled={loader} onClick={onNewArrButtonClick}/>\n                    </div>\n                </div>\n                <ul className={sortingPageStyles.visualContainer}>\n                    {array.map((item, index) =>\n                        <li key={index} className={sortingPageStyles.column}>\n                            <Column index={item.value} state={item.color}/>\n                        </li>\n                    )}\n                </ul>\n            </div>\n        </SolutionLayout>\n    );\n};\n","interface IStack<T> {\n    push: (item: T) => void;\n    pop: () => void;\n    clear: () => void;\n    getSize: () => number;\n    getElements: () => T[]\n}\n\nexport class Stack<T> implements IStack<T> {\n    private container: T[] = [];\n\n    get peek(): T {\n        return this.container[this.container.length - 1];\n    };\n\n    push = (item: T): void => {\n        this.container.push(item);\n    };\n\n    pop = (): void => {\n        this.container.pop();\n    };\n\n    clear = (): void => {\n        this.container = [];\n    };\n\n    getSize = () => this.container.length;\n\n    getElements = () => this.container;\n}\n","import React, {ChangeEvent, useState} from \"react\";\nimport {ElementStates} from \"../../types/element-states\";\nimport {Button} from \"../ui/button/button\";\nimport {Circle} from \"../ui/circle/circle\";\nimport {Input} from \"../ui/input/input\";\nimport {SolutionLayout} from \"../ui/solution-layout/solution-layout\";\nimport stackPageStyles from './stack-page.module.css';\nimport {SHORT_DELAY_IN_MS} from '../../constants/delays';\nimport {Stack} from \"./stack-page.utils\";\nimport {setDelay} from \"../../utils/utils\";\nimport {ButtonState} from \"../../types/buttonState\";\nimport styles from \"../main-page/main-page.module.css\";\n\ntype TStackItem = {\n    value: string;\n    color: ElementStates;\n};\n\nexport const StackPage: React.FC = () => {\n    const [stackArr, setStackArr] = useState<TStackItem[]>([]);\n    const [inputValue, setInputValue] = useState('');\n\n    const [loader, setLoader] = useState<ButtonState>({\n        buttonAdd: false,\n        buttonDelete: false,\n        buttonReset: false\n    });\n\n    const [stack] = useState(new Stack<TStackItem>());\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n    };\n\n    const handleAddButton = async () => {\n        if (inputValue) {\n            setLoader({ ...loader, buttonAdd: true });\n            stack.push({value: inputValue, color: ElementStates.Changing});\n            setInputValue('');\n            setStackArr([...stack.getElements()]);\n            await setDelay(SHORT_DELAY_IN_MS);\n            stack.peek.color = ElementStates.Default;\n            setStackArr([...stack.getElements()]);\n            setLoader({ ...loader, buttonAdd: false });\n        }\n    };\n\n    const handleDeleteButton = async () => {\n        setLoader({ ...loader, buttonDelete: true });\n        stack.peek.color = ElementStates.Changing;\n        setStackArr([...stack.getElements()]);\n        await setDelay(SHORT_DELAY_IN_MS);\n        stack.pop();\n        setStackArr([...stack.getElements()]);\n        setLoader({ ...loader, buttonDelete: false });\n    };\n\n    const handleRemoveAllButton = () => {\n        setLoader({ ...loader, buttonReset: true })\n        stack.clear()\n        setStackArr([...stack.getElements()]);\n        setLoader({ ...loader, buttonReset: false })\n    };\n\n    const givePosition = (index: number, arr: TStackItem[]): string => {\n        if (index === arr.length - 1) {\n            return 'top';\n        } else {\n            return '';\n        }\n    };\n\n    return (\n        <SolutionLayout contentText={\"структура данных, которая работает по принципу «последним пришёл, первым ушёл» (LIFO — last in, first out). Стек можно представить как некий контейнер, в котором элементы могут быть добавлены в вершину, а затем извлечены только из вершины.\"} title=\"Стек\">\n            <div className={stackPageStyles.mainContainer}>\n                <div className={stackPageStyles.inputContainer}>\n                    <section className={stackPageStyles.inputSection}>\n                        <div className={stackPageStyles.input}>\n                            <Input maxLength={4} isLimitText={true} type=\"text\" value={inputValue} onChange={onChange}/>\n                        </div>\n                        <div className={stackPageStyles.addButton}>\n                            <Button text=\"Добавить\" data-testid='addBtn' onClick={handleAddButton}\n                                    isLoader={loader.buttonAdd}\n                                    disabled={inputValue === ''}/>\n                        </div>\n                        <div className={stackPageStyles.deleteButton}>\n                            <Button text=\"Удалить\" data-testid='deleteBtn' onClick={handleDeleteButton}\n                                    isLoader={loader.buttonDelete}\n                                    disabled={!stackArr.length}/>\n                        </div>\n                    </section>\n                    <div className={stackPageStyles.button}>\n                        <Button text=\"Очистить\" data-testid='removeBtn' onClick={handleRemoveAllButton}\n                                isLoader={loader.buttonReset}\n                                disabled={!stackArr.length}/>\n                    </div>\n                </div>\n                <ul className={stackPageStyles.circlesBox}>\n                    {stackArr && stackArr.map((item, index) =>\n                        <li key={index}>\n                            <Circle letter={item.value} state={item.color} index={index}\n                                    head={givePosition(index, stackArr)}/>\n                        </li>)}\n                </ul>\n            </div>\n        </SolutionLayout>\n    );\n};\n","import React from \"react\";\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\nimport {ListPage} from \"../list-page/list-page\";\nimport {MainPage} from \"../main-page/main-page\";\nimport {QueuePage} from \"../queue-page/queue-page\";\nimport {SortingPage} from \"../sorting-page/sorting-page\";\nimport {StackPage} from \"../stack-page/stack-page\";\n\nimport \"./app.module.css\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Router>\n                <Routes>\n                    <Route path=\"/VisuAlGo\" Component={MainPage}/>\n                    <Route path=\"/VisuAlGo/stack\" Component={StackPage} />\n                    <Route path=\"/VisuAlGo/queue\" Component={QueuePage} />\n                    <Route path=\"/VisuAlGo/list\" Component={ListPage} />\n                    <Route path=\"/VisuAlGo/sorting\" Component={SortingPage} />\n                </Routes>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","import \"react\";\nimport React from \"react\";\n\nimport \"./index.css\";\nimport \"./fonts/fonts.css\";\nimport \"./components/ui/common.css\";\nimport \"./components/ui/box.css\";\nimport App from \"./components/app/app\";\n\nimport { createRoot } from 'react-dom/client';\n\nconst container = document.getElementById('root');\nconst root = createRoot(container!);\n\nroot.render(<React.StrictMode><App /></React.StrictMode>);\n\n"],"sourceRoot":""}